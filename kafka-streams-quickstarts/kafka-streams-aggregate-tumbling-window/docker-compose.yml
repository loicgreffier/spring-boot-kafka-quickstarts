---
version: '2'
services:
  broker:
    image: confluentinc/cp-kafka:7.4.1
    hostname: broker
    container_name: broker
    networks:
      - spring-boot-kafka-quickstarts
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.1
    hostname: schema-registry
    container_name: schema-registry
    networks:
      - spring-boot-kafka-quickstarts
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.4.1
    hostname: control-center
    container_name: control-center
    networks:
      - spring-boot-kafka-quickstarts
    depends_on:
      - broker
      - schema-registry
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  kafka-streams-producer-person:
    image: loicgreffier/spring-boot-kafka-quickstarts:kafka-streams-producer-person-1.0.0
    hostname: kafka-streams-producer-person
    container_name: kafka-streams-producer-person
    networks:
      - spring-boot-kafka-quickstarts
    depends_on:
      - broker
      - schema-registry
    ports:
      - "8082:8080"
    restart: unless-stopped
    environment:
      SPRING_APPLICATION_JSON: |
        {
          "kafka": {
            "properties": {
              "bootstrap.servers": "broker:29092",
              "schema.registry.url": "http://schema-registry:8081"
            }
          }
        }

  kafka-streams-aggregate-tumbling-window:
    image: loicgreffier/spring-boot-kafka-quickstarts:kafka-streams-aggregate-tumbling-window-1.0.0
    hostname: kafka-streams-aggregate-tumbling-window
    container_name: kafka-streams-aggregate-tumbling-window
    networks:
      - spring-boot-kafka-quickstarts
    depends_on:
      - kafka-streams-producer-person
    ports:
      - "8083:8080"
    restart: unless-stopped
    environment:
      SPRING_APPLICATION_JSON: |
        {
          "kafka": {
            "properties": {
              "bootstrap.servers": "broker:29092",
              "schema.registry.url": "http://schema-registry:8081"
            }
          }
        }

networks:
  spring-boot-kafka-quickstarts:
    driver: bridge
